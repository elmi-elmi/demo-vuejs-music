<template>
  <div class="border border-gray-200 p-3 mb-4 rounded">
    <div v-show="!showForm">
      <h4 class="inline-block text-2xl font-bold">{{ song.modified_name }}</h4>
      <button
        class="ml-1 py-1 px-2 text-sm rounded text-white bg-red-600 float-right"
      >
        <i class="fa fa-times"></i>
      </button>
      <button
        class="
          ml-1
          py-1
          px-2
          text-sm
          rounded
          text-white
          bg-blue-600
          float-right
        "
        @click.prevent="showForm = !showForm"
      >
        <i class="fa fa-pencil-alt"></i>
      </button>
    </div>
    <!-- <div class="text-center" :class="in_variant" v-show="showAlert"> {{messageAlert}}</div> -->
    <div v-show="showForm">
      <VeeForm
        :validation-schema="schema"
        :initial-values="song"
        @submit="edit"
      >
        <div class="mb-3">
          <label class="inline-block mb-2">Song Title</label>
          <VeeField
            name="modified_name"
            type="text"
            class="
              block
              w-full
              py-1.5
              px-3
              text-gray-800
              border border-gray-300
              transition
              duration-500
              focus:outline-none focus:border-black
              rounded
            "
            placeholder="Enter Song Title"
          />
          <ErrorMessage name="modified_name" class="text-red-400" />
        </div>
        <div class="mb-3">
          <label class="inline-block mb-2">Genre</label>
          <VeeField
            name="genre"
            type="text"
            class="
              block
              w-full
              py-1.5
              px-3
              text-gray-800
              border border-gray-300
              transition
              duration-500
              focus:outline-none focus:border-black
              rounded
            "
            placeholder="Enter Genre"
          />
          <ErrorMessage name="genre" class="text-red-400" />
        </div>
        <button
          type="submit"
          class="py-1.5 px-3 rounded text-white bg-green-600"
        >
          Submit
        </button>
        <button
          type="button"
          class="py-1.5 px-3 rounded text-white bg-gray-600"
          @click.prevent="showForm = false"

        >
          Go Back
        </button>
      </VeeForm>
    </div>
  </div>

</template>

<script>
// import { doc, updateDoc } from 'firebase/firestore';
// import { db } from '@/includes/firebase';

export default {
  name: 'CompositionItem',
  props: {
    song: {
      type: Object,
      require: true,
    },
    updateSong: {
      type: Function,
      require: true,
    },
    index: {
      type: Number,
      require: true,
    },
  },
  data() {
    return {
      showForm: false,
      schema: { title: 'required|max:100', genre: 'required|max:100' },
      // in_submission: false,
      // in_variant: 'bg-blue-400',
      // showAlert: false,
      // messageAlert: 'updating...',
    };
  },
  methods: {
    edit() {
      console.log('hi there----------------');
    },
    // async edit(values) {
    //   this.in_submission = false;
    //   this.in_variant = 'bg-blue-400';
    //   this.showAlert = true;
    //   this.messageAlert = 'updating';
    //   console.log('--------methods in items');
    //   const songRef = doc(db, 'songs', this.index);
    //   await updateDoc(songRef, values)
    //     .catch((err) => {
    //       this.in_submission = false;
    //       this.in_variant = 'bg-red-400';
    //       this.showAlert = true;
    //       this.messageAlert = 'Something wrong';
    //       console.log(err);
    //     });
    //   console.log('citem:---------------');
    //   console.log(this.index);
    //   console.log('====================');
    //   // this.updateSong(values, this.index);
    //   this.in_submission = false;
    //   this.in_variant = 'bg-green-400';
    //   this.showAlert = true;
    //   this.messageAlert = 'success';
    // },

  },
};
</script>
